{
  "contractName": "Example",
  "abi": [
    {
      "inputs": [],
      "name": "transferEther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"transferEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Example.sol\":\"Example\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Example.sol\":{\"keccak256\":\"0x49e951e95a7e1206e55e6a50dffd46f1d345ae705f7e9b18d09d9938c1e4cc49\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d38feead5871b013ef9bae0cfb901c86282352ce746a1624ce9026bbd7b758c6\",\"dweb:/ipfs/QmVb9RUSUHTDJn1oGTGsX6SxZPAB3uU95iQ2hDLs2m59iB\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b5060a58061001e6000396000f3fe608060405260043610601c5760003560e01c8063c9b25f0f146021575b600080fd5b60276029565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555056fea2646970667358221220aa006f26c738ff4915455a0c96d0a24c08cd9bde77f762c4c436b9094ba732b464736f6c63430008090033",
  "deployedBytecode": "0x608060405260043610601c5760003560e01c8063c9b25f0f146021575b600080fd5b60276029565b005b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555056fea2646970667358221220aa006f26c738ff4915455a0c96d0a24c08cd9bde77f762c4c436b9094ba732b464736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "69:782:0:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "69:782:0:-:0;;;;;;;;;;;;;;;;;;;;;585:264;;;:::i;:::-;;;841:1;818:8;:20;827:10;818:20;;;;;;;;;;;;;;;:24;;;;585:264::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.4.2 <0.9.0;\n\ncontract Example {\n    // A vulnerable bank smart contract.\n    mapping (address => uint256) balances;\n    \n    // // This gives the amount/ether strored in the smart contract.\n    // function deposit(uint256 amount) public payable {\n    //     (bool sent, bytes memory data) = payable(address(this))\n    //                                 .call{value:amount}(\"\");\n    //     balances[msg.sender] += amount;\n    // }\n    \n    // web3.utils.toWei('1', 'ether') else goes to fallback since\n    // arguments error.\n    function transferEther()\n        public\n        payable\n    {\n        // (bool sent, bytes memory data) = addressToSend\n        //                    .call{value:amount}(\"\");\n        // require(sent, \"Failed to send Ether\");\n        balances[msg.sender] = 0;\n    }\n}\n",
  "sourcePath": "/home/clustfuzz/Documents/Research/Smart Contracts Project/Solidity-Examples/contract-samples/contracts/Example.sol",
  "ast": {
    "absolutePath": "project:/contracts/Example.sol",
    "exportedSymbols": {
      "Example": [
        17
      ]
    },
    "id": 18,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".2",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Example",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 17,
        "linearizedBaseContracts": [
          17
        ],
        "name": "Example",
        "nameLocation": "78:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "162:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 17,
            "src": "133:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 4,
              "keyType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "142:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "133:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "153:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "645:204:0",
              "statements": [
                {
                  "expression": {
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "818:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 11,
                      "indexExpression": {
                        "expression": {
                          "id": 9,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "827:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "827:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "818:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 12,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "841:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "818:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14,
                  "nodeType": "ExpressionStatement",
                  "src": "818:24:0"
                }
              ]
            },
            "functionSelector": "c9b25f0f",
            "id": 16,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferEther",
            "nameLocation": "594:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "607:2:0"
            },
            "returnParameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:0:0"
            },
            "scope": 17,
            "src": "585:264:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 18,
        "src": "69:782:0",
        "usedErrors": []
      }
    ],
    "src": "36:816:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Example.sol",
    "exportedSymbols": {
      "Example": [
        17
      ]
    },
    "id": 18,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".2",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Example",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 17,
        "linearizedBaseContracts": [
          17
        ],
        "name": "Example",
        "nameLocation": "78:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5,
            "mutability": "mutable",
            "name": "balances",
            "nameLocation": "162:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 17,
            "src": "133:37:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 4,
              "keyType": {
                "id": 2,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "142:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "133:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 3,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "153:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "645:204:0",
              "statements": [
                {
                  "expression": {
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 8,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "818:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 11,
                      "indexExpression": {
                        "expression": {
                          "id": 9,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "827:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "827:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "818:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 12,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "841:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "818:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14,
                  "nodeType": "ExpressionStatement",
                  "src": "818:24:0"
                }
              ]
            },
            "functionSelector": "c9b25f0f",
            "id": 16,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferEther",
            "nameLocation": "594:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "607:2:0"
            },
            "returnParameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:0:0"
            },
            "scope": 17,
            "src": "585:264:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 18,
        "src": "69:782:0",
        "usedErrors": []
      }
    ],
    "src": "36:816:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-01-18T13:33:08.720Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}